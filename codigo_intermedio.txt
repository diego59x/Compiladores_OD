class_Factorial:
var=0
PARAM n
class_factorial_Factorial[Int]:
n=0
t1=n=0
if t1 goto label1
else goto label2 endif
label1_init
f=0
label1_finish
label2_init
n=1
t2=n=1
if t2 goto label3
else goto label4 endif
label3_init
f=1
label3_finish
label4_init
t3=n-1
t4= CALL factorial(t3)
t5=n*factorial
f=n*factorial(n-1)
label4_finish
label2_finish
end_class_factorial_Factorial
end_class_Factorial
class_Fibonacci:
PARAM n
class_fibonacci_Fibonacci[Int]:
n=1
t6=n=1
if t6 goto label5
else goto label6 endif
label5_init
f=1
label5_finish
label6_init
n=2
t7=n=2
if t7 goto label7
else goto label8 endif
label7_init
f=1
label7_finish
label8_init
t8=n-1
t9= CALL fibonacci(t8)
t10=n-2
t11= CALL fibonacci(t10)
t12=t9+t11
f=t12
label8_finish
label6_finish
end_class_fibonacci_Fibonacci
end_class_Fibonacci
class_Main:
n=10
class_main_Main[SELF_TYPE]:
facto=newFactorial
fibo=newFibonacci
t13= CALL out_int(t12)
end_class_main_Main
end_class_Main
